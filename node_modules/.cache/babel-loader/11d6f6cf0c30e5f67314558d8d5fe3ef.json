{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/rolis/source/repos/radio_api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/rolis/source/repos/radio_api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\rolis\\\\source\\\\repos\\\\radio_api\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import{RadioBrowserApi}from'radio-browser-api';import AudioPlayer from\"react-h5-audio-player\";import'react-h5-audio-player/src/styles.scss';import defaultImage from\"./radio.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Radio(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),stations=_useState2[0],setStations=_useState2[1];var _useState3=useState(\"all\"),_useState4=_slicedToArray(_useState3,2),stationFilter=_useState4[0],setStationFilter=_useState4[1];var _useState5=useState(\"english\"),_useState6=_slicedToArray(_useState5,2),radioLanguage=_useState6[0],setRadioLanguage=_useState6[1];// When the station filter or radioLanguage changes, useEffect is called to call the setupApi with the selected station filter and radio language. The data is set into the setStations state hook.\nuseEffect(function(){setupApi(stationFilter,radioLanguage).then(function(data){setStations(data);});},[stationFilter,radioLanguage]);//Async function used to fetch and return the correct radio stations on the app\n// based upon user input of stationFilter and radioLanguage.\nvar setupApi=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(stationFilter,radioLanguage){var api,stations;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:api=new RadioBrowserApi(fetch.bind(window),\"My Radio App\");// Querying the API by language and tag(genre/stationFilter)\n_context.next=3;return api.searchStations({language:radioLanguage,tag:stationFilter,limit:30}).then(function(data){return data;});case 3:stations=_context.sent;return _context.abrupt(\"return\",stations);case 5:case\"end\":return _context.stop();}}},_callee);}));return function setupApi(_x,_x2){return _ref.apply(this,arguments);};}();//Array of music genres a user can pick from.\nvar filters=[\"all\",\"classical\",\"country\",\"dance\",\"disco\",\"house\",\"jazz\",\"pop\",\"rap\",\"rock\"];// Function used for setting the station image to a default image. This function is\n// called when onError is detected because some radio stations may not have an image.\nvar setDefaultSrc=function setDefaultSrc(event){event.target.src=defaultImage;};return/*#__PURE__*/_jsxs(\"div\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"string\",className:\"languageInput\",placeholder:\"Enter a language\",onChange:function onChange(e){setRadioLanguage(e.target.value);}}),/*#__PURE__*/_jsx(\"div\",{className:\"filters\",children:filters.map(function(filter,index){return/*#__PURE__*/_jsx(\"span\",{className:stationFilter===filter?\"selected\":\"\",onClick:function onClick(){return setStationFilter(filter);},children:filter},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"stations\",children:stations&&stations.map(function(station,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"station\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stationName\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"logo\",src:station.favicon,alt:\"station logo\",onError:setDefaultSrc}),/*#__PURE__*/_jsx(\"div\",{className:\"name\",children:station.name})]}),/*#__PURE__*/_jsx(AudioPlayer,{className:\"player\",src:station.urlResolved,showJumpControls:false,layout:\"stacked\",customProgressBarSection:[],customControlsSection:[\"MAIN_CONTROLS\",\"VOLUME_CONTROLS\"],autoPlayAfterSrcChange:false})]},index);})})]});}","map":{"version":3,"names":["React","useEffect","useState","RadioBrowserApi","AudioPlayer","defaultImage","Radio","stations","setStations","stationFilter","setStationFilter","radioLanguage","setRadioLanguage","setupApi","then","data","api","fetch","bind","window","searchStations","language","tag","limit","filters","setDefaultSrc","event","target","src","e","value","map","filter","index","station","favicon","name","urlResolved"],"sources":["C:/Users/rolis/source/repos/radio_api/src/Radio.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { RadioBrowserApi } from 'radio-browser-api'\r\nimport AudioPlayer from \"react-h5-audio-player\"\r\nimport 'react-h5-audio-player/src/styles.scss'\r\nimport defaultImage from \"./radio.png\"\r\n\r\nexport default function Radio() {\r\n  const [stations, setStations] = useState()\r\n  const [stationFilter, setStationFilter] = useState(\"all\")\r\n  const [radioLanguage, setRadioLanguage] = useState(\"english\");\r\n  // When the station filter or radioLanguage changes, useEffect is called to call the setupApi with the selected station filter and radio language. The data is set into the setStations state hook.\r\n  useEffect(() => {\r\n    setupApi(stationFilter, radioLanguage).then(data => {\r\n      setStations(data);\r\n    });\r\n  }, [stationFilter, radioLanguage]);\r\n  //Async function used to fetch and return the correct radio stations on the app\r\n  // based upon user input of stationFilter and radioLanguage.\r\n  const setupApi = async (stationFilter, radioLanguage) => {\r\n  const api = new RadioBrowserApi(fetch.bind(window), \"My Radio App\");\r\n   // Querying the API by language and tag(genre/stationFilter)\r\n   const stations = await api\r\n   .searchStations({\r\n     language: radioLanguage,\r\n     tag: stationFilter,\r\n     limit: 30,\r\n   })\r\n   .then((data) => {\r\n     return data;\r\n   });\r\n\r\n return stations;\r\n };\r\n  //Array of music genres a user can pick from.\r\n  const filters = [\r\n    \"all\",\r\n    \"classical\",\r\n    \"country\",\r\n    \"dance\",\r\n    \"disco\",\r\n    \"house\",\r\n    \"jazz\",\r\n    \"pop\",\r\n    \"rap\",\r\n    \"rock\",\r\n  ]\r\n\r\n  // Function used for setting the station image to a default image. This function is\r\n  // called when onError is detected because some radio stations may not have an image.\r\n  const setDefaultSrc = (event) => {\r\n    event.target.src = defaultImage;\r\n  };\r\n\r\n  return (\r\n    <div className=\"radio\">\r\n       {/* 'languageInput' input element receives a string input for language and sets the language via the setRadioLanguage(e.target.value) hook. */}\r\n       <input\r\n        type='string'\r\n        className='languageInput'\r\n        placeholder='Enter a language'\r\n        onChange={(e) => {\r\n          setRadioLanguage(e.target.value);\r\n        }}\r\n      />\r\n      {/* 'Filters' div creates a span for each filter via the map() method. The span has an onClick attribute with a function, setting the filter via the setStationFilter(filter) hook. */}\r\n      <div className=\"filters\">\r\n        {filters.map((filter, index) => (\r\n          <span\r\n            key={index}\r\n            className={stationFilter === filter ? \"selected\" : \"\"}\r\n            onClick={() => setStationFilter(filter)}\r\n          >\r\n            {filter}\r\n          </span>\r\n        ))}\r\n        \r\n      </div>\r\n\r\n      {/* 'Stations' div generates a div for each station that contains station name, station img, \r\n      and an audio player component via the map() method.  */}\r\n      <div className=\"stations\">\r\n        {stations &&\r\n          stations.map((station, index) => {\r\n            return (\r\n              <div className=\"station\" key={index}>\r\n                <div className=\"stationName\">\r\n                  <img\r\n                    className=\"logo\"\r\n                    src={station.favicon}\r\n                    alt=\"station logo\"\r\n                    onError={setDefaultSrc}\r\n                  />\r\n                  <div className=\"name\">{station.name}</div>\r\n                \r\n                </div>\r\n                {/* (AudioPlayer) React H5 Audio Player was used because it's a customizable audio player component that provides consistent UI/UX on diff browsers that is mobile friendly. */}\r\n                <AudioPlayer\r\n                  className=\"player\"\r\n                  src={station.urlResolved}\r\n                  showJumpControls={false}\r\n                  layout=\"stacked\"\r\n                  customProgressBarSection={[]}\r\n                  customControlsSection={[\"MAIN_CONTROLS\", \"VOLUME_CONTROLS\"]}\r\n                  autoPlayAfterSrcChange={false}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"8XAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,eAAT,KAAgC,mBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,MAAO,uCAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,aAAzB,C,wFAEA,cAAe,SAASC,CAAAA,KAAT,EAAiB,CAC9B,cAAgCJ,QAAQ,EAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA,eAA0CN,QAAQ,CAAC,KAAD,CAAlD,yCAAOO,aAAP,eAAsBC,gBAAtB,eACA,eAA0CR,QAAQ,CAAC,SAAD,CAAlD,yCAAOS,aAAP,eAAsBC,gBAAtB,eACA;AACAX,SAAS,CAAC,UAAM,CACdY,QAAQ,CAACJ,aAAD,CAAgBE,aAAhB,CAAR,CAAuCG,IAAvC,CAA4C,SAAAC,IAAI,CAAI,CAClDP,WAAW,CAACO,IAAD,CAAX,CACD,CAFD,EAGD,CAJQ,CAIN,CAACN,aAAD,CAAgBE,aAAhB,CAJM,CAAT,CAKA;AACA;AACA,GAAME,CAAAA,QAAQ,0FAAG,iBAAOJ,aAAP,CAAsBE,aAAtB,mIACXK,GADW,CACL,GAAIb,CAAAA,eAAJ,CAAoBc,KAAK,CAACC,IAAN,CAAWC,MAAX,CAApB,CAAwC,cAAxC,CADK,CAEhB;AAFgB,sBAGOH,CAAAA,GAAG,CACzBI,cADsB,CACP,CACdC,QAAQ,CAAEV,aADI,CAEdW,GAAG,CAAEb,aAFS,CAGdc,KAAK,CAAE,EAHO,CADO,EAMtBT,IANsB,CAMjB,SAACC,IAAD,CAAU,CACd,MAAOA,CAAAA,IAAP,CACD,CARsB,CAHP,QAGVR,QAHU,+CAaXA,QAbW,wDAAH,kBAARM,CAAAA,QAAQ,gDAAd,CAeA;AACA,GAAMW,CAAAA,OAAO,CAAG,CACd,KADc,CAEd,WAFc,CAGd,SAHc,CAId,OAJc,CAKd,OALc,CAMd,OANc,CAOd,MAPc,CAQd,KARc,CASd,KATc,CAUd,MAVc,CAAhB,CAaA;AACA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/BA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAmBvB,YAAnB,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,OAAf,wBAEG,cACC,IAAI,CAAC,QADN,CAEC,SAAS,CAAC,eAFX,CAGC,WAAW,CAAC,kBAHb,CAIC,QAAQ,CAAE,kBAACwB,CAAD,CAAO,CACfjB,gBAAgB,CAACiB,CAAC,CAACF,MAAF,CAASG,KAAV,CAAhB,CACD,CANF,EAFH,cAWE,YAAK,SAAS,CAAC,SAAf,UACGN,OAAO,CAACO,GAAR,CAAY,SAACC,MAAD,CAASC,KAAT,qBACX,aAEE,SAAS,CAAExB,aAAa,GAAKuB,MAAlB,CAA2B,UAA3B,CAAwC,EAFrD,CAGE,OAAO,CAAE,yBAAMtB,CAAAA,gBAAgB,CAACsB,MAAD,CAAtB,EAHX,UAKGA,MALH,EACOC,KADP,CADW,EAAZ,CADH,EAXF,cA0BE,YAAK,SAAS,CAAC,UAAf,UACG1B,QAAQ,EACPA,QAAQ,CAACwB,GAAT,CAAa,SAACG,OAAD,CAAUD,KAAV,CAAoB,CAC/B,mBACE,aAAK,SAAS,CAAC,SAAf,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,YACE,SAAS,CAAC,MADZ,CAEE,GAAG,CAAEC,OAAO,CAACC,OAFf,CAGE,GAAG,CAAC,cAHN,CAIE,OAAO,CAAEV,aAJX,EADF,cAOE,YAAK,SAAS,CAAC,MAAf,UAAuBS,OAAO,CAACE,IAA/B,EAPF,GADF,cAYE,KAAC,WAAD,EACE,SAAS,CAAC,QADZ,CAEE,GAAG,CAAEF,OAAO,CAACG,WAFf,CAGE,gBAAgB,CAAE,KAHpB,CAIE,MAAM,CAAC,SAJT,CAKE,wBAAwB,CAAE,EAL5B,CAME,qBAAqB,CAAE,CAAC,eAAD,CAAkB,iBAAlB,CANzB,CAOE,sBAAsB,CAAE,KAP1B,EAZF,GAA8BJ,KAA9B,CADF,CAwBD,CAzBD,CAFJ,EA1BF,GADF,CA0DD"},"metadata":{},"sourceType":"module"}